#!/usr/bin/env python
"""
SCL <scott@rerobots>
Copyright (C) 2020 rerobots, Inc.
"""
import base64
from io import BytesIO
import json
import sys
import time

from PIL import Image
import redis


def crop(full_b64, conf):
    ENCODING_PREFIX = 'data:image/jpeg;base64,'

    full = base64.b64decode(full_b64[len(ENCODING_PREFIX):])

    buf = BytesIO()
    buf.write(full)
    buf.seek(0)

    img = Image.open(buf)

    out = dict([(wdid, None) for wdid in conf.keys()])
    for wdid, rect in conf.items():
        sub = img.crop(rect)
        buf = BytesIO()
        sub.save(buf, 'JPEG')
        out[wdid] = ENCODING_PREFIX + base64.b64encode(buf.getvalue()).decode('utf-8')

    return out


if __name__ == '__main__':
    main_handle = sys.argv[1]
    conf = sys.argv[2]
    conf = json.loads(conf)

    red = redis.StrictRedis(host='127.0.0.1', port=6379, db=0)

    st = time.monotonic()
    while True:
        if red.exists(main_handle):
            break
        if time.monotonic() - st > 15:
            sys.exit(1)
        time.sleep(1)

    prev = None
    while red.exists(main_handle):
        full_b64 = str(red.get(main_handle), encoding='utf-8')
        if prev == full_b64:
            time.sleep(.01)
            continue

        prev = full_b64

        parts = crop(full_b64, conf)
        for wdid, enc in parts.items():
            wdhandle = '{}:{}'.format(main_handle, wdid)
            red.set(wdhandle, enc)
            red.expire(wdhandle, 30)
